
steps:
- id: 'branch name'
  name: 'alpine'
  entrypoint: 'sh'  
  args: 
  - '-c'
  - | 
      echo "***********************"
      echo "$BRANCH_NAME"
      echo "***********************"
# [START tf-init]
- id: 'tf init'
  name: 'hashicorp/terraform:1.0.0'
  entrypoint: 'sh'
  args: 
  - '-c'
  - | 
    if [ -d "src/infra/" ]; then
      echo "** executing tf plan **"
      cd src/infra
      terraform init
    else
      echo "** no folder found - src/infra **"
    fi
# [END tf-init]

# [START tf-plan]
- id: 'tf plan'
  name: 'hashicorp/terraform:1.0.0'
  entrypoint: 'sh'
  args: 
  - '-c'
  - | 
    if [ -d "src/infra/" ]; then
      echo "** executing tf plan **"
      cd src/infra
      terraform plan
    else
      echo "** no folder found - src/infra **"
    fi
# [END tf-plan]

# [START tf-apply]
- id: 'tf apply'
  name: 'hashicorp/terraform:1.0.0'
  entrypoint: 'sh'
  args: 
  - '-c'
  - | 
    if [ -d "src/infra/" ]; then
      echo "** executing tf apply **"
      cd src/infra
      terraform apply -auto-approve
    else
      echo "** no folder found - src/infra **"
    fi
# [END tf-apply]

# [START init pipeline]

- id: 'pipeline'
  name: 'bash'
  args: ['./pipeline/main.sh']
# [END init Pipeline]
